#!/bin/bash
# ------------------------------------------------- #
# Deploy plugin files to plugin folder on specified server.
# Update the server variables for ssh access.

SSH_USER='XXX'; # server username
SSH_SERVER='srv01'; # this should be mapped to your ssh config alias
# If we have multiple installations that should be adressed for ex. "production", add one for each row.
declare -a REMOTE_PLUGIN_PATH_PROD=(
'www/XXX.se/wp-content/plugins/site-widgets'
)
declare -a REMOTE_PLUGIN_PATH_STAGE=(
'www/XXX.se.haus.se/wp-content/plugins/site-widgets'
)


# No further adjustments are needed.
#
#
#
#
# ------------------------------------------------- #
# DEPLOY TO STAGE OR PROD?
# ------------------------------------------------- #
# Function to show usage
show_usage() {
  echo "Usage: $0 [-staging | -production]"
  exit 1
}

# Variables to store the environment
ENVIRONMENT=""


# Parse flags
while [[ "$#" -gt 0 ]]; do
  case $1 in
    -staging)
      ENVIRONMENT="staging"
      shift ;;
    -s)
      ENVIRONMENT="staging"
      shift ;;
    -production)
      ENVIRONMENT="production"
      shift ;;
    -p)
      ENVIRONMENT="production"
      shift ;;
    *)
      echo "Unknown option: $1"
      show_usage ;;
  esac
done

# If no flag was provided, ask the user
if [[ -z "$ENVIRONMENT" ]]; then
  echo "No environment flag provided."
  read -p "Which environment do you want to deploy to? (staging/production): " ENVIRONMENT
fi

# Validate the environment
if [[ "$ENVIRONMENT" != "staging" && "$ENVIRONMENT" != "production" ]]; then
  echo "Invalid environment: $ENVIRONMENT"
  show_usage
fi


# Set the correct remote paths
if [[ "$ENVIRONMENT" == "staging" ]]; then
  REMOTE_PLUGIN_PATHS=("${REMOTE_PLUGIN_PATH_STAGE[@]}")
elif [[ "$ENVIRONMENT" == "production" ]]; then
  REMOTE_PLUGIN_PATHS=("${REMOTE_PLUGIN_PATH_PROD[@]}")
fi



echo -e "\033[0;32m›››››› Deploying to $ENVIRONMENT ‹‹‹‹‹‹"

# ------------------------------------------------- #
# COMPILE & MINIFY
# ------------------------------------------------- #
#nvm use
echo -e "\033[0;37m→ compiling.."
npx mix --production > /dev/null 2>&1



# ------------------------------------------------- #
# SYNC NECESSARY FILES TO SERVER
# ------------------------------------------------- #
# Sync files/folders to server
export LC_ALL=C

echo -e "\033[0;37m→ uploading.."

for i in "${REMOTE_PLUGIN_PATHS[@]}"
do
  rsync -a ./* $SSH_USER@$SSH_SERVER:$i --exclude=node_modules --exclude=.github --exclude=.idea --exclude=.gitignore --exclude=.nvmrc --exclude=composer.json --exclude=composer.lock --exclude=mix-manifest.json --exclude=package.json --exclude=info.json --exclude=package-lock.json --exclude=webpack.mix.js --exclude=README.md --exclude=deploy
done


# ------------------------------------------------- #
# CLEANUP
# ------------------------------------------------- #
# Beautify scripts again locally
echo -e "\033[0;37m→ uncompile for dev.."
npx mix > /dev/null 2>&1


# ------------------------------------------------- #
# SUCCESS
# ------------------------------------------------- #
echo -e "\033[0;32m✓ Deploy done → \033[1;33m$ENVIRONMENT"
